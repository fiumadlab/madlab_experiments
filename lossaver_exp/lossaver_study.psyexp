<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="1.85.1">
  <Settings>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="color" updates="None" val="white" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="Experiment info" updates="None" val="{u'session': u'001', u'participant': u''}" valType="code"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Units" updates="None" val="pix" valType="str"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Window size (pixels)" updates="None" val="[1366, 768]" valType="code"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Data filename" updates="None" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="expName" updates="None" val="lossaver_study" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
  </Settings>
  <Routines>
    <Routine name="cond_instr">
      <TextComponent name="instr_text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="instr_text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="1200" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="In the following task, you will be presented with a cue followed by &amp;#10;an image. If the cue was green, correctly identifying that image &amp;#10;as indoor or outdoor will reward you with 50 cents. If the cue is red, &amp;#10;failing to correctly identify that image will cause you to lose 50 cents.&amp;#10;&amp;#10;When an object image is presented, your task is to classify that image as&amp;#10;an indoor or outdoor object.&amp;#10;&amp;#10;                             1 = Indoor                  2 = Outdoor&amp;#10;&amp;#10;Press Return when you are ready to begin." valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="30" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'return'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="stimulus_setup">
        <Param name="Begin Experiment" updates="constant" val="import numpy as np&amp;#10;import os&amp;#10;import numpy.random as nr&amp;#10;from glob import glob&amp;#10;from copy import deepcopy&amp;#10;#Create randomized list of stimuli with their correct classification&amp;#10;stimbase = sorted(glob('stimuli/*a.jpg'))&amp;#10;&amp;#10;stimclass = np.genfromtxt('stimclass.csv',&amp;#10;                           delimiter=',').tolist()&amp;#10;combo = zip(stimbase, stimclass)&amp;#10;&amp;#10;combo = nr.permutation(combo).tolist()&amp;#10;stimbase_rand, stimclass_rand = zip(*combo)&amp;#10;stimbase_rand = list(stimbase_rand)&amp;#10;stimclass_rand = list(stimclass_rand)&amp;#10;#Creates dictionary for each variable&amp;#10;stim_dict = {}&amp;#10;corr_dict = {}&amp;#10;trial_dict = {}&amp;#10;side_dict = {}&amp;#10;amt_dict = {}&amp;#10;isi_dict = {}&amp;#10;fisi_dict = {}&amp;#10;for run in range(1,5):&amp;#10;    #Create stimulus and classification list&amp;#10;    stim_list = []&amp;#10;    class_list = []&amp;#10;    for i in range(54):&amp;#10;        stim_list.append(stimbase_rand.pop())&amp;#10;        class_list.append(stimclass_rand.pop())&amp;#10;    stim_dict['{}'.format(run)] = stim_list&amp;#10;    corr_dict['{}'.format(run)] = class_list&amp;#10;    #Create Trial Type List&amp;#10;    flatten = lambda l: [item for sublist in l for item in sublist]&amp;#10;    list_tuple = (1,1)&amp;#10;    reward_loss_list = []&amp;#10;    rew_list = []&amp;#10;    loss_list = []&amp;#10;    neu_list = []&amp;#10;    for i in range(9):&amp;#10;        rew_list.append(1)&amp;#10;        loss_list.append(2)&amp;#10;        neu_list.append(3)&amp;#10;    reward_loss_list = deepcopy(rew_list) + deepcopy(loss_list) + deepcopy(neu_list)&amp;#10;    trial_type_list = []&amp;#10;    for item in reward_loss_list:&amp;#10;        new_item = np.array(list_tuple) * item&amp;#10;        trial_type_list.append(new_item.tolist())&amp;#10;    trial_type_list = nr.permutation(trial_type_list)&amp;#10;    trial_type_list = flatten(trial_type_list)    &amp;#10;    #Creates list of side to present on&amp;#10;    side_seed_dict = {}&amp;#10;    side_seed_list = np.ones(9).tolist() + (np.ones(9) * 2).tolist()&amp;#10;    for i, item in enumerate(side_seed_list):&amp;#10;        if item == 1:&amp;#10;            side_seed_list[i] = 'left'&amp;#10;        elif item ==2: &amp;#10;            side_seed_list[i] = 'right'&amp;#10;    side_seed_dict['1'] = nr.permutation(deepcopy(side_seed_list)).tolist()&amp;#10;    side_seed_dict['2'] = nr.permutation(deepcopy(side_seed_list)).tolist()&amp;#10;    side_seed_dict['3'] = nr.permutation(deepcopy(side_seed_list)).tolist()&amp;#10;    side_list = []&amp;#10;    for item in trial_type_list:&amp;#10;        side_list.append(side_seed_dict['{}'.format(item)].pop())&amp;#10;    side_dict['{}'.format(run)] = side_list&amp;#10;    #Creates List of awarded amounts&amp;#10;    amt_seed_dict = {}&amp;#10;    amt_seed_list = (np.ones(9) * 0.50).tolist()&amp;#10;    amt_seed_dict['1_left'] = nr.permutation(deepcopy(amt_seed_list)).tolist()&amp;#10;    amt_seed_dict['1_right'] = nr.permutation(deepcopy(amt_seed_list)).tolist()&amp;#10;    amt_seed_dict['2_left'] = nr.permutation(deepcopy(amt_seed_list)).tolist()&amp;#10;    amt_seed_dict['2_right'] = nr.permutation(deepcopy(amt_seed_list)).tolist()&amp;#10;    amt_seed_dict['3_left'] = np.zeros(9).tolist()&amp;#10;    amt_seed_dict['3_right'] = np.zeros(9).tolist()&amp;#10;    amt_list = []&amp;#10;    for i, item in enumerate(trial_type_list):&amp;#10;        if side_list[i] == 'left':&amp;#10;            amt_list.append(amt_seed_dict['{}_{}'.format(item, side_list[i])].pop())&amp;#10;        elif side_list[i] == 'right':&amp;#10;            amt_list.append(amt_seed_dict['{}_{}'.format(item, side_list[i])].pop())&amp;#10;    amt_dict['{}'.format(run)] = amt_list&amp;#10;    for i, item in enumerate(trial_type_list):&amp;#10;        if item == 1:&amp;#10;            trial_type_list[i] = 'reward'&amp;#10;        elif item == 2:&amp;#10;            trial_type_list[i] = 'loss'&amp;#10;        elif item == 3:&amp;#10;            trial_type_list[i] = 'neutral'&amp;#10;    trial_dict['{}'.format(run)] = trial_type_list&amp;#10;    #creates list of interstimulus durations&amp;#10;    isi_list = []&amp;#10;    fisi_list = []&amp;#10;    for i in range(18):&amp;#10;        isi_list.extend((4,5,6))&amp;#10;    isi_list = nr.permutation(isi_list).tolist()&amp;#10;    fisi_list = nr.permutation(isi_list).tolist()&amp;#10;    isi_dict['{}'.format(run)] = isi_list&amp;#10;    fisi_dict['{}'.format(run)] = fisi_list&amp;#10;earn_amt = 10.00&amp;#10;earn_txt = format(earn_amt, '.2f')" valType="extendedCode"/>
        <Param name="name" updates="None" val="stimulus_setup" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="trial_clock = core.MonotonicClock()&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="cue">
      <PolygonComponent name="cue_box">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="cue_box" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1.000,1.000,1.000]" valType="str"/>
        <Param name="stopVal" updates="constant" val=".500" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="set during: cue.ISI" val="(cuepos, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="40" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="set during: cue.ISI" val="$cuecolor" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$fisidur" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(420, 420)" valType="code"/>
      </PolygonComponent>
      <StaticComponent name="ISI">
        <Param name="code" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="ISI" valType="code"/>
        <Param name="stopVal" updates="constant" val="0.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
      </StaticComponent>
      <CodeComponent name="cue_code">
        <Param name="Begin Experiment" updates="constant" val="cuecolor = 'grey'&amp;#10;cueamt = None&amp;#10;cuepres = None&amp;#10;cuepos = ''&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="name" updates="None" val="cue_code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="trial_id = '{}'.format(run_index)&amp;#10;stim = stim_dict[trial_id][trial_index]&amp;#10;stimans = int(float(corr_dict[trial_id][trial_index]))&amp;#10;trial_type = trial_dict[trial_id][trial_index]&amp;#10;if trial_type == 'neutral':&amp;#10;    cuecolor = 'grey'&amp;#10;elif trial_type == 'reward':&amp;#10;    cuecolor = 'green'&amp;#10;elif trial_type == 'loss':&amp;#10;    cuecolor = 'red'&amp;#10;if side_dict[trial_id][trial_index] == 'left':&amp;#10;    cuepos = -300&amp;#10;elif side_dict[trial_id][trial_index] == 'right':&amp;#10;    cuepos = 300&amp;#10;&amp;#10;rew_amt = amt_dict[trial_id][trial_index]&amp;#10;isidur = isi_dict[trial_id][trial_index]&amp;#10;fisidur = fisi_dict[trial_id][trial_index]" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="trials.addData('cue_time', float(trial_clock.getTime()) - 0.500)&amp;#10;trials.addData('stimside', side_dict[trial_id][trial_index])&amp;#10;trials.addData('fisi_dur', fisidur)" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <PolygonComponent name="fixation_cue">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="fixation_cue" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fisidur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="90" valType="int"/>
        <Param name="size" updates="constant" val="(25, 25)" valType="code"/>
      </PolygonComponent>
      <TextComponent name="cue_money_count">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="cue_money_count" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="set every repeat" val="$earn_txt&amp;#10;" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fisidur + 0.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -300)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="60" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="trial">
      <CodeComponent name="trial_code">
        <Param name="Begin Experiment" updates="constant" val="from random import choice&amp;#10;color_1 = color_2 = 'white'&amp;#10;polyopa_1 = polyopa_2 = 0&amp;#10;stimans = ''&amp;#10;" valType="extendedCode"/>
        <Param name="name" updates="None" val="trial_code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="color_1 = color_2 = 'white'" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="trials.addData('stimulus', stim[-8:])&amp;#10;trials.addData('stimans', stimans)&amp;#10;trials.addData('rwd_amt', rew_amt)&amp;#10;trials.addData('isidur', isidur)&amp;#10;trials.addData('trialtype', trial_type)&amp;#10;rewd_amt = format(rew_amt, '.2f')&amp;#10;if trial_resp.corr == 1 and trial_type =='reward':&amp;#10;    fdbck_txt = 'Correct \n +{}'.format(rewd_amt)&amp;#10;    fdbck_color = 'Green'&amp;#10;    earn_amt += float(rew_amt)&amp;#10;elif trial_resp.corr == 1 and trial_type != 'reward':&amp;#10;    fdbck_txt = 'Correct'&amp;#10;    fdbck_color = 'Green'&amp;#10;elif trial_resp.corr == 0 and trial_type == 'loss':&amp;#10;    fdbck_txt = 'Incorrect \n -{}'.format(rewd_amt)&amp;#10;    fdbck_color = 'Red'&amp;#10;    earn_amt -= float(rew_amt)&amp;#10;elif trial_resp.corr == 0 and trial_type != 'loss':&amp;#10;    fdbck_txt = 'Incorrect'&amp;#10;    fdbck_color = 'Red'&amp;#10;earn_txt = format(earn_amt, '.2f')&amp;#10;trials.addData('trial_clock', float(trial_clock.getTime()) - 1.000)&amp;#10;trials.addData('earn_amt', earn_txt)" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="if len(trial_resp.keys) != 0:&amp;#10;    # Save the corresponding box as which_box&amp;#10;    which_box = trial_resp.keys[0]&amp;#10;    # Execute the format function for the color fill of the selected box&amp;#10;    exec_run = True&amp;#10;    exec('color_{0} = &quot;yellow&quot;'.format(which_box))" valType="extendedCode"/>
      </CodeComponent>
      <PolygonComponent name="poly_left">
        <Param name="opacity" updates="set every repeat" val="polyopa_1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="poly_left" valType="code"/>
        <Param name="fillColor" updates="set every frame" val="$color_1" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(-250, -300)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(100, 100)" valType="code"/>
      </PolygonComponent>
      <PolygonComponent name="poly_right">
        <Param name="opacity" updates="set every repeat" val="polyopa_2" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="poly_right" valType="code"/>
        <Param name="fillColor" updates="set every frame" val="$color_2" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(250, -300)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(100, 100)" valType="code"/>
      </PolygonComponent>
      <KeyboardComponent name="trial_resp">
        <Param name="correctAns" updates="constant" val="$stimans" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="trial_resp" valType="code"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'1', '2'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <PolygonComponent name="cue_box_trial">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="cue_box_trial" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1.000,1.000,1.000]" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="set every repeat" val="(cuepos, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="40" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$cuecolor" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(420, 420)" valType="code"/>
      </PolygonComponent>
      <ImageComponent name="stimulus_image">
        <Param name="opacity" updates="set every repeat" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="stimulus_image" valType="code"/>
        <Param name="color" updates="set every repeat" val="$[1.000,1.000,1.000]" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="set every repeat" val="(cuepos, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$stim" valType="str"/>
        <Param name="size" updates="constant" val="(400, 400)" valType="code"/>
      </ImageComponent>
      <TextComponent name="trial_money_amt">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="trial_money_amt" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="set every repeat" val="$earn_txt&amp;#10;" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -300)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="60" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback">
      <TextComponent name="feedback_text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="feedback_text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="set every repeat" val="$fdbck_color" valType="str"/>
        <Param name="text" updates="set every repeat" val="$fdbck_txt" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="60" valType="code"/>
      </TextComponent>
      <TextComponent name="feedback_money_count">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="feedback_money_count" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="set every repeat" val="$earn_txt&amp;#10;" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -300)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="60" valType="code"/>
      </TextComponent>
      <CodeComponent name="feedback_time">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="feedback_time" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="trials.addData('feedback_clock', float(trial_clock.getTime()) - 0.500)" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="intercue">
      <PolygonComponent name="fixation_intercue">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="fixation_intercue" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="stopVal" updates="constant" val="$isidur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="90" valType="int"/>
        <Param name="size" updates="constant" val="(25, 25)" valType="code"/>
      </PolygonComponent>
      <TextComponent name="intercue_money_amt">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="intercue_money_amt" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="set every repeat" val="$earn_txt" valType="str"/>
        <Param name="stopVal" updates="constant" val="$isidur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -300)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="60" valType="code"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="run">
      <Param name="conditionsFile" updates="None" val="runs_study.xlsx" valType="str"/>
      <Param name="name" updates="None" val="run" valType="code"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{u'run_index': 1}, {u'run_index': 2}, {u'run_index': 3}, {u'run_index': 4}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="cond_instr"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="conditionsFile" updates="None" val="trials_study.xlsx" valType="str"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{u'trial': 1, u'trial_index': 0}, {u'trial': 1, u'trial_index': 1}, {u'trial': 1, u'trial_index': 2}, {u'trial': 1, u'trial_index': 3}, {u'trial': 1, u'trial_index': 4}, {u'trial': 1, u'trial_index': 5}, {u'trial': 1, u'trial_index': 6}, {u'trial': 1, u'trial_index': 7}, {u'trial': 1, u'trial_index': 8}, {u'trial': 1, u'trial_index': 9}, {u'trial': 1, u'trial_index': 10}, {u'trial': 1, u'trial_index': 11}, {u'trial': 1, u'trial_index': 12}, {u'trial': 1, u'trial_index': 13}, {u'trial': 1, u'trial_index': 14}, {u'trial': 1, u'trial_index': 15}, {u'trial': 1, u'trial_index': 16}, {u'trial': 1, u'trial_index': 17}, {u'trial': 1, u'trial_index': 18}, {u'trial': 1, u'trial_index': 19}, {u'trial': 1, u'trial_index': 20}, {u'trial': 1, u'trial_index': 21}, {u'trial': 1, u'trial_index': 22}, {u'trial': 1, u'trial_index': 23}, {u'trial': 1, u'trial_index': 24}, {u'trial': 1, u'trial_index': 25}, {u'trial': 1, u'trial_index': 26}, {u'trial': 1, u'trial_index': 27}, {u'trial': 1, u'trial_index': 28}, {u'trial': 1, u'trial_index': 29}, {u'trial': 1, u'trial_index': 30}, {u'trial': 1, u'trial_index': 31}, {u'trial': 1, u'trial_index': 32}, {u'trial': 1, u'trial_index': 33}, {u'trial': 1, u'trial_index': 34}, {u'trial': 1, u'trial_index': 35}, {u'trial': 1, u'trial_index': 36}, {u'trial': 1, u'trial_index': 37}, {u'trial': 1, u'trial_index': 38}, {u'trial': 1, u'trial_index': 39}, {u'trial': 1, u'trial_index': 40}, {u'trial': 1, u'trial_index': 41}, {u'trial': 1, u'trial_index': 42}, {u'trial': 1, u'trial_index': 43}, {u'trial': 1, u'trial_index': 44}, {u'trial': 1, u'trial_index': 45}, {u'trial': 1, u'trial_index': 46}, {u'trial': 1, u'trial_index': 47}, {u'trial': 1, u'trial_index': 48}, {u'trial': 1, u'trial_index': 49}, {u'trial': 1, u'trial_index': 50}, {u'trial': 1, u'trial_index': 51}, {u'trial': 1, u'trial_index': 52}, {u'trial': 1, u'trial_index': 53}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="cue"/>
    <Routine name="intercue"/>
    <Routine name="trial"/>
    <Routine name="feedback"/>
    <LoopTerminator name="trials"/>
    <LoopTerminator name="run"/>
  </Flow>
</PsychoPy2experiment>
