<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="1.85.1">
  <Settings>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="color" updates="None" val="$[1.000,1.000,1.000]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="Experiment info" updates="None" val="{u'session': u'001', u'participant': u''}" valType="code"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Units" updates="None" val="pix" valType="str"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Window size (pixels)" updates="None" val="[1366, 768]" valType="code"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="expName" updates="None" val="lossaver_test_del" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
  </Settings>
  <Routines>
    <Routine name="introduction">
      <TextComponent name="text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="1200" valType="code"/>
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="text" updates="constant" val="In the following task, you will be presented with images from the previous study session and new previously unseen images.&amp;#10;&amp;#10;Your task is to identify whether each image is old or new.&amp;#10;&amp;#10;                  1 = Old                        2 = New&amp;#10;&amp;#10;When you identify an image as old, you will then be asked to &amp;#10;identify which side of the screen it was presented on.&amp;#10;&amp;#10;                  1 = Left                       2 = Right&amp;#10;&amp;#10;Press Return when you are ready to begin." valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="40" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="intro_resp">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="intro_resp" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'return'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="begin_setup">
        <Param name="Begin Experiment" updates="constant" val="import pandas as pd&amp;#10;from glob import glob&amp;#10;import numpy.random as nr&amp;#10;prev_data = pd.read_csv(glob('data/{}_lossaver_study_*.csv'.format(expInfo['participant']))[0])&amp;#10;prev_stimuli = prev_data['stimulus'].tolist()&amp;#10;prev_type = prev_data['trialtype'].tolist()&amp;#10;prev_side = prev_data['stimside']&amp;#10;prev_test = pd.read_csv(glob('data/{}_lossaver_test_imm_*.csv'.format(expInfo['participant']))[0])&amp;#10;prev_test_old = prev_test['stim_old'].tolist()&amp;#10;prev_test_old = [x for x in prev_test_old if x != 'None']&amp;#10;prev_test_new = prev_test['stim_new'].tolist()&amp;#10;prev_test_new = [x for x in prev_test_new if x != 'None']&amp;#10;&amp;#10;for i, item in enumerate(prev_stimuli):&amp;#10;    if item in prev_test_old:&amp;#10;        prev_type[i] = 'del'&amp;#10;&amp;#10;combo_del = zip(prev_type, prev_stimuli, prev_side)&amp;#10;combo_del = sorted(combo_del)&amp;#10;&amp;#10;prev_type_del, prev_stim_del, prev_side_del = zip(*combo_del)&amp;#10;prev_type = prev_type_del[72:]&amp;#10;prev_stim = prev_stim_del[72:]&amp;#10;prev_side = prev_side_del[72:]&amp;#10;&amp;#10;prev_loss = prev_stim[:48]&amp;#10;prev_loss_side = prev_side[:48]&amp;#10;combo_loss = sorted(zip(prev_loss_side, prev_loss))&amp;#10;_, prev_loss_list = zip(*combo_loss)&amp;#10;prev_loss_left = prev_loss_list[:24]&amp;#10;prev_loss_right = prev_loss_list[24:]&amp;#10;&amp;#10;prev_neutral = prev_stim[48:96]&amp;#10;prev_neutral_side = prev_side[48:96]&amp;#10;combo_neutral = sorted(zip(prev_neutral_side, prev_neutral))&amp;#10;_, prev_neutral_list = zip(*combo_neutral)&amp;#10;prev_neutral_left = prev_neutral_list[:24]&amp;#10;prev_neutral_right = prev_neutral_list[24:]&amp;#10;&amp;#10;prev_reward = prev_stim[96:]&amp;#10;prev_reward_side = prev_side[96:]&amp;#10;combo_reward = sorted(zip(prev_reward_side, prev_reward))&amp;#10;_, prev_reward_list = zip(*combo_reward)&amp;#10;prev_reward_left = prev_reward_list[:24]&amp;#10;prev_reward_right = prev_reward_list[24:]&amp;#10;&amp;#10;new_list = sorted(glob('stimuli/new/*a.jpg'))&amp;#10;new_list = [x[-8:] for x in new_list]&amp;#10;for i, item in enumerate(new_list):&amp;#10;    if item in prev_test_new:&amp;#10;        new_list[i] = 'del'&amp;#10;    else:&amp;#10;        new_list[i] = 'stimuli/new/' + item&amp;#10;new_list = sorted(new_list)&amp;#10;new_list = new_list[72:]&amp;#10;new_list_rand = nr.permutation(new_list).tolist()&amp;#10;prev_loss_left = nr.permutation(prev_loss_left).tolist()&amp;#10;prev_loss_right = nr.permutation(prev_loss_right).tolist()&amp;#10;prev_neutral_left = nr.permutation(prev_neutral_left).tolist()&amp;#10;prev_neutral_right = nr.permutation(prev_neutral_right).tolist()&amp;#10;prev_reward_left = nr.permutation(prev_reward_left).tolist()&amp;#10;prev_reward_right = nr.permutation(prev_reward_right).tolist()&amp;#10;&amp;#10;stim_dict = {}&amp;#10;type_dict = {}&amp;#10;side_dict = {}&amp;#10;for run in range(1, 4):&amp;#10;    stim_list = []&amp;#10;    type_list = []&amp;#10;    side_list = []&amp;#10;#Creates list of 48 old trials (16 of each type, 4 on each side)&amp;#10;    for i in range(8):&amp;#10;        stim_list.append('stimuli/' + prev_loss_left.pop())&amp;#10;        side_list.append('left')&amp;#10;        stim_list.append('stimuli/' + prev_loss_right.pop())&amp;#10;        side_list.append('right')&amp;#10;        type_list.extend(('loss', 'loss'))&amp;#10;        stim_list.append('stimuli/' + prev_neutral_left.pop())&amp;#10;        side_list.append('left')&amp;#10;        stim_list.append('stimuli/' + prev_neutral_right.pop())&amp;#10;        side_list.append('right')&amp;#10;        type_list.extend(('neutral', 'neutral'))&amp;#10;        stim_list.append('stimuli/' + prev_reward_left.pop())&amp;#10;        side_list.append('left')&amp;#10;        stim_list.append('stimuli/' + prev_reward_right.pop())&amp;#10;        side_list.append('right')&amp;#10;        type_list.extend(('reward', 'reward'))&amp;#10;        stim_list.extend((new_list_rand.pop(), &amp;#10;                          new_list_rand.pop(), &amp;#10;                          new_list_rand.pop(),&amp;#10;                          new_list_rand.pop(),&amp;#10;                          new_list_rand.pop(),&amp;#10;                          new_list_rand.pop()))&amp;#10;        type_list.extend(('new', 'new', 'new', &amp;#10;                          'new','new', 'new'))&amp;#10;        side_list.extend(('new', 'new', 'new',&amp;#10;                          'new', 'new', 'new'))&amp;#10;&amp;#10;    combo_stim_type = zip(stim_list, type_list, side_list)&amp;#10;    combo_stim_type = nr.permutation(combo_stim_type)&amp;#10;    stim_list_rand, type_list_rand, side_list_rand = zip(*combo_stim_type)&amp;#10;    stim_dict['{}'.format(run)] = stim_list_rand&amp;#10;    type_dict['{}'.format(run)] = type_list_rand&amp;#10;    side_dict['{}'.format(run)] = side_list_rand&amp;#10;stim_opa = 0&amp;#10;trial_opa = 0" valType="extendedCode"/>
        <Param name="name" updates="None" val="begin_setup" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="trial">
      <ImageComponent name="trial_image">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="trial_image" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="image" updates="set during: trial.ISI" val="$stim" valType="str"/>
        <Param name="size" updates="constant" val="(400, 400)" valType="code"/>
      </ImageComponent>
      <CodeComponent name="trial_code">
        <Param name="Begin Experiment" updates="constant" val="color_1 = color_2 = 'white'" valType="extendedCode"/>
        <Param name="name" updates="None" val="trial_code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="stim = stim_dict['{}'.format(run_index)][trial_index]&amp;#10;&amp;#10;if type_dict['{}'.format(run_index)][trial_index] in ['reward', 'loss', 'neutral']:&amp;#10;    stimans = 1&amp;#10;else:&amp;#10;    stimans = 2" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="type_response = ''&amp;#10;followup_dur = 0&amp;#10;follow_waste = 2.5&amp;#10;color_1 = color_2 = 'white'&amp;#10;&amp;#10;corr_side = None&amp;#10;if side_dict['{}'.format(run_index)][trial_index] == 'left':&amp;#10;    corr_side = 1&amp;#10;elif side_dict['{}'.format(run_index)][trial_index] == 'right':&amp;#10;    corr_side = 2&amp;#10;trials.addData('oldvsnew', type_response)&amp;#10;if type_dict['{}'.format(run_index)][trial_index] != 'new':&amp;#10;    stim_old = stim[-8:]&amp;#10;    stim_new = None&amp;#10;elif type_dict['{}'.format(run_index)][trial_index] == 'new':&amp;#10;    stim_new = stim[-8:]&amp;#10;    stim_old = None&amp;#10;&amp;#10;if len(trial_resp.keys) != 0:&amp;#10;    if int(trial_resp.keys[-1]) == 1:&amp;#10;        type_response = 'old'&amp;#10;        followup_dur = 15&amp;#10;        follow_waste = 0&amp;#10;        followup_ans = corr_side&amp;#10;    elif int(trial_resp.keys[-1]) == 2:&amp;#10;        type_response = 'new'&amp;#10;        followup_dur = 0&amp;#10;        follow_waste = 2.5&amp;#10;        followup_ans = None&amp;#10;else:&amp;#10;    type_response = 'none'&amp;#10;    followup_dur = 2.5&amp;#10;&amp;#10;trials.addData('stim', stim)&amp;#10;trials.addData('stim_old', stim_old)&amp;#10;trials.addData('stim_new', stim_new)&amp;#10;trials.addData('trial_type', type_dict['{}'.format(run_index)][trial_index])&amp;#10;trials.addData('stim_side' , side_dict['{}'.format(run_index)][trial_index])&amp;#10;&amp;#10;if len(trial_resp.keys) != 0:&amp;#10;    # Save the corresponding box as which_box&amp;#10;    which_box = trial_resp.keys[0]&amp;#10;    # Execute the format function for the color fill of the selected box&amp;#10;    exec_run = True&amp;#10;    exec('color_{0} = &quot;yellow&quot;'.format(which_box))&amp;#10;stim_opa = 1&amp;#10;text_size = 1&amp;#10;trial_resp_dur = 0.5" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <StaticComponent name="ISI">
        <Param name="code" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="ISI" valType="code"/>
        <Param name="stopVal" updates="constant" val="0.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
      </StaticComponent>
      <KeyboardComponent name="trial_resp">
        <Param name="correctAns" updates="constant" val="$stimans" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="trial_resp" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'1','2'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <PolygonComponent name="poly_left_trial">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="poly_left_trial" valType="code"/>
        <Param name="fillColor" updates="set every frame" val="$color_1" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(-250, -300)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(100, 100)" valType="code"/>
      </PolygonComponent>
      <PolygonComponent name="poly_right_trial">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="poly_right_trial" valType="code"/>
        <Param name="fillColor" updates="set every frame" val="$color_2" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(250, -300)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(100, 100)" valType="code"/>
      </PolygonComponent>
      <PolygonComponent name="fixation_cue">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="fixation_cue" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="90" valType="int"/>
        <Param name="size" updates="constant" val="(25, 25)" valType="code"/>
      </PolygonComponent>
    </Routine>
    <Routine name="followup">
      <PolygonComponent name="time_waste">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="time_waste" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="stopVal" updates="constant" val="$follow_waste" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="90" valType="int"/>
        <Param name="size" updates="constant" val="(25,25)" valType="code"/>
      </PolygonComponent>
      <CodeComponent name="followup_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="followup_code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="color_1 = color_2 = 'white'&amp;#10;if followup_resp.corr == 1:&amp;#10;    corr_loc = 'correct'&amp;#10;elif followup_resp.corr == 0:&amp;#10;    corr_loc = 'incorrect'&amp;#10;trials.addData('corr_location', corr_loc)&amp;#10;trial_resp_dur = 0.5&amp;#10;if len(followup_resp.keys) != 0:&amp;#10;    # Save the corresponding box as which_box&amp;#10;    which_box = followup_resp.keys[0]&amp;#10;    # Execute the format function for the color fill of the selected box&amp;#10;    exec_run = True&amp;#10;    exec('color_{0} = &quot;yellow&quot;'.format(which_box))&amp;#10;    trial_resp_dur = 0.5&amp;#10;elif len(followup_resp.keys) == 0:&amp;#10;    trial_resp_dur = 0&amp;#10;stim_opa = 0&amp;#10;text_size = 60 &amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="followup_text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="followup_text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="1200" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="&amp;#10;&amp;#10;          Left or Right?&amp;#10;&amp;#10;&amp;#10;&amp;#10;1 = Left                 2 = Right" valType="str"/>
        <Param name="stopVal" updates="constant" val="$followup_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="60" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="followup_resp">
        <Param name="correctAns" updates="constant" val="$followup_ans" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="followup_resp" valType="code"/>
        <Param name="stopVal" updates="constant" val="$followup_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'1', '2'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <PolygonComponent name="poly_left_followup">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="poly_left_followup" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$color_1" valType="str"/>
        <Param name="stopVal" updates="constant" val="$followup_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(-250, -300)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(100, 100)" valType="code"/>
      </PolygonComponent>
      <PolygonComponent name="poly_right_followup">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="poly_right_followup" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$color_2" valType="str"/>
        <Param name="stopVal" updates="constant" val="$followup_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(250, -300)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(100, 100)" valType="code"/>
      </PolygonComponent>
    </Routine>
    <Routine name="trial_response">
      <PolygonComponent name="polygon_left">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="polygon_left" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$color_1" valType="str"/>
        <Param name="stopVal" updates="constant" val="$trial_resp_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(-250, -300)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(100, 100)" valType="code"/>
      </PolygonComponent>
      <PolygonComponent name="polygon_right">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="polygon_right" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$color_2" valType="str"/>
        <Param name="stopVal" updates="constant" val="$trial_resp_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(250, -300)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(100, 100)" valType="code"/>
      </PolygonComponent>
      <CodeComponent name="resp_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="resp_code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="color_1 = color_2 = 'white'" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="resp_text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="resp_text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="1200" valType="code"/>
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="text" updates="constant" val="&amp;#10;&amp;#10;          Left or Right?&amp;#10;&amp;#10;&amp;#10;&amp;#10;1 = Left                 2 = Right" valType="str"/>
        <Param name="stopVal" updates="constant" val="$trial_resp_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="$text_size" valType="code"/>
      </TextComponent>
      <ImageComponent name="resp_image">
        <Param name="opacity" updates="set every repeat" val="stim_opa" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="resp_image" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="$trial_resp_dur" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="image" updates="set every repeat" val="$stim" valType="str"/>
        <Param name="size" updates="constant" val="(400, 400)" valType="code"/>
      </ImageComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="introduction"/>
    <LoopInitiator loopType="TrialHandler" name="runs">
      <Param name="conditionsFile" updates="None" val="runs_test.xlsx" valType="str"/>
      <Param name="name" updates="None" val="runs" valType="code"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{u'run_index': 1}, {u'run_index': 2}, {u'run_index': 3}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="conditionsFile" updates="None" val="test_trial_del.xlsx" valType="str"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{u'trial_index': 0}, {u'trial_index': 1}, {u'trial_index': 2}, {u'trial_index': 3}, {u'trial_index': 4}, {u'trial_index': 5}, {u'trial_index': 6}, {u'trial_index': 7}, {u'trial_index': 8}, {u'trial_index': 9}, {u'trial_index': 10}, {u'trial_index': 11}, {u'trial_index': 12}, {u'trial_index': 13}, {u'trial_index': 14}, {u'trial_index': 15}, {u'trial_index': 16}, {u'trial_index': 17}, {u'trial_index': 18}, {u'trial_index': 19}, {u'trial_index': 20}, {u'trial_index': 21}, {u'trial_index': 22}, {u'trial_index': 23}, {u'trial_index': 24}, {u'trial_index': 25}, {u'trial_index': 26}, {u'trial_index': 27}, {u'trial_index': 28}, {u'trial_index': 29}, {u'trial_index': 30}, {u'trial_index': 31}, {u'trial_index': 32}, {u'trial_index': 33}, {u'trial_index': 34}, {u'trial_index': 35}, {u'trial_index': 36}, {u'trial_index': 37}, {u'trial_index': 38}, {u'trial_index': 39}, {u'trial_index': 40}, {u'trial_index': 41}, {u'trial_index': 42}, {u'trial_index': 43}, {u'trial_index': 44}, {u'trial_index': 45}, {u'trial_index': 46}, {u'trial_index': 47}, {u'trial_index': 48}, {u'trial_index': 49}, {u'trial_index': 50}, {u'trial_index': 51}, {u'trial_index': 52}, {u'trial_index': 53}, {u'trial_index': 54}, {u'trial_index': 55}, {u'trial_index': 56}, {u'trial_index': 57}, {u'trial_index': 58}, {u'trial_index': 59}, {u'trial_index': 60}, {u'trial_index': 61}, {u'trial_index': 62}, {u'trial_index': 63}, {u'trial_index': 64}, {u'trial_index': 65}, {u'trial_index': 66}, {u'trial_index': 67}, {u'trial_index': 68}, {u'trial_index': 69}, {u'trial_index': 70}, {u'trial_index': 71}, {u'trial_index': 72}, {u'trial_index': 73}, {u'trial_index': 74}, {u'trial_index': 75}, {u'trial_index': 76}, {u'trial_index': 77}, {u'trial_index': 78}, {u'trial_index': 79}, {u'trial_index': 80}, {u'trial_index': 81}, {u'trial_index': 82}, {u'trial_index': 83}, {u'trial_index': 84}, {u'trial_index': 85}, {u'trial_index': 86}, {u'trial_index': 87}, {u'trial_index': 88}, {u'trial_index': 89}, {u'trial_index': 90}, {u'trial_index': 91}, {u'trial_index': 92}, {u'trial_index': 93}, {u'trial_index': 94}, {u'trial_index': 95}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="trial_response"/>
    <Routine name="followup"/>
    <Routine name="trial_response"/>
    <LoopTerminator name="trials"/>
    <LoopTerminator name="runs"/>
  </Flow>
</PsychoPy2experiment>
